'''
Created on Feb 2, 2015

@author: amagoon
'''

webpage = input("Enter URL : ")
import time
from scrapper import modifyData as r
from scrapper import define_page as d
from scrapper import getTitle as t
from scrapper import ifAlt as iff
from scrapper import structure_meta as structure
from prettytable import PrettyTable

#    Key strings to identify HTML tags.
img_key = '<img'
meta_key = '<meta'

#    User's input
date = time.strftime("%m/%d/%Y")
start = time.clock()

#    First looks for an existing file, then creates one if none exist
file_name = d.define_page(webpage)
# print('\n','Filename: ',file_name, '\n')

def startIndividualURL():
    #    First attempts to open an existing file
    #    If none exists, one is created.
    my_img_set = set()
    my_meta_set = set()
    try:
        with open(file_name, encoding='utf-8') as content:           
            title = ''  #    Set to an empty string to detect a change
            try:
                for line in content:
                    if title != '': #    No longer attempts to look for the title if it has changed
                        pass
                    else:
                        try:
                            title = t.title(line)
                        except:
                            pass
                    try:
                        #    Only difference between the two bellow variables are the keys passed
                        #    and what happens to the data after they get returned
                        images = r.return_tags(line, img_key)
                        meta = r.return_tags(line, meta_key)
                        for item in images:
                            my_img_set.add(str(item))
                        for item in meta:
                            my_meta_set.add(str(item))
                    except TypeError:
                        print('TypeError', line)
            except UnicodeDecodeError:
                print("Unicode Error")
                
            printout = d.define_printout(webpage)
            try:
                with open(printout, 'w+') as p:
                    p.write(date+"\n")
                    if title != '':
                        try:
                            p.write('Page Title: '+title+'\n'+'\n')
                        except:
                            print("could not write title to file")
                            raise Exception
                    #    Pulls alt text from img tags
                    for item in my_img_set:
                        alt = iff.alt(item)
                        try:
                            if len(alt) > 0:
                                p.write("Image meta data: " + alt + '\n')
                        except Exception as exc:
                            raise RuntimeError("write alt text fail") from exc
                        
                    #    Organizes and cleans up meta data
                    for item in my_meta_set:
                        try:
                            mType, metaList = structure.meta(item)
                        except TypeError:
                            pass
                        else:
                            table = PrettyTable([mType])
                            for i in metaList.split(','):
                                table.add_row([i])
                            p.write(table.get_string() + '\n')
            except TypeError:
                print("Create printout failed.")
                
            print("""
Operation complete.
Filename: %s
File Location: %s"""
% (printout,"C:\Anaconda\Workspaces\Project Setup\src\scrapper"))
            
    except TypeError:
        print("Could not open file. Program has been terminated.")

startIndividualURL()
print(time.clock() - start)
